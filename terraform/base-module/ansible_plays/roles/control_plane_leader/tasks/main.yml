- name: Check ansible_vars_file.yml file exists.
  ansible.builtin.stat:
    path: /home/ubuntu/ansible_plays/ansible_vars_file.yml
  register: ansible_vars_file

#
- name: Start the cluster
  ansible.builtin.shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --cri-socket unix:///run/cri-dockerd.sock --control-plane-endpoint {{ control_plane_lb }}:6443 --upload-certs --v=5>> control_plane.txt
  register: result
  args:
    chdir: $HOME
    creates: control_plane.txt

- name: Sleep for 20 seconds
  ansible.builtin.wait_for:
    timeout: 20

- name: Create .kube directory
  become: yes
  become_user: ubuntu
  ansible.builtin.file:
    path: $HOME/.kube
    state: directory
    mode: '0755'

- name: Check admin.conf file exists.
  ansible.builtin.stat:
    path: /etc/kubernetes/admin.conf
  register: kube_conf

- name: Copy admin.conf to user's kube config
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    remote_src: yes
    owner: ubuntu
  when: kube_conf.stat.exists

- name: Download Flannel
  ansible.builtin.get_url:
    url: https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
    dest: /home/ubuntu/kube-flannel.yml

#- name: Replace Pod CIDR Config
#  ansible.builtin.replace:
#    path: /home/ubuntu/kube-flannel.yml
#    regexp: "10.244.0.0/16"
#    replace: "192.168.0.0/16"

- name: Install Pod network
  become_user: ubuntu
  ansible.builtin.shell: kubectl apply -f kube-flannel.yml

- name: get default kubeadm config
  ansible.builtin.shell: kubeadm config print init-defaults > kubeadm_config.yaml
  args:
    chdir: $HOME
    creates: kubeadm-config.yaml

- name: Create a new certificate key
  ansible.builtin.shell: kubeadm init phase upload-certs --upload-certs --config $HOME/kubeadm_config.yaml
  register: join_certificate_key

- name: Get join command
  ansible.builtin.shell: kubeadm token create --print-join-command --certificate-key "{{ join_certificate_key.stdout_lines[2] }}"
  register: cp_join_command

- debug:
    var: cp_join_command

- name: Copy join command to local file
  local_action: copy content="{{ cp_join_command.stdout_lines[0] }}" dest="./cp_join_command"

- name: Get worker node join command
  ansible.builtin.shell: kubeadm token create --print-join-command
  register: node_join_command

- debug:
    var: node_join_command

- name: Copy worker node join command to local file
  local_action: copy content="{{ node_join_command.stdout_lines[0] }}" dest="./node_join_command"
